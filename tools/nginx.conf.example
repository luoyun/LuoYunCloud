#user http;
worker_processes  1;

events {
    use epoll;
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    gzip  on;

    upload_progress proxied 5m;
    upload_progress_json_output;

    server_names_hash_bucket_size 128;

    upstream frontends {
        server 127.0.0.1:8888;
    }

    server {
        listen 80;
        access_log  /opt/LuoYun/logs/luoyun.access.log;

        client_max_body_size 2000M;

        # Upload form should be submitted to this location
        location /upload {
            # Pass altered request body to this location
            #upload_pass   @test;
            upload_pass /appliance/upload;
    
            # Store files to this directory
            # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
            #upload_store /tmp 1;
            upload_store /opt/LuoYun/data/upload;
            
            # Allow uploaded files to be read only by user
            upload_store_access user:r;
    
            #upload_limit_rate 1000k;

            # Set specified fields in request body
            upload_set_form_field "${upload_field_name}_name" "$upload_file_name";
            upload_set_form_field "${upload_field_name}_content_type" "$upload_content_type";
            upload_set_form_field "${upload_field_name}_path" "$upload_tmp_path";
    
            # Inform backend about hash and size of a file
            upload_aggregate_form_field "${upload_field_name}_md5" "$upload_file_md5";
            upload_aggregate_form_field "${upload_field_name}_size" "$upload_file_size";
    
            upload_pass_form_field "^_xsrf$";
    
            upload_cleanup 400 404 499 500-505;

            #upload_pass_args on;

            track_uploads proxied 30s;
        }
    
        location ^~ /progress {
            report_uploads proxied;
        }

        location /static/ {
            root "/opt/LuoYun/web/";
            if (-f $request_filename) {
                rewrite ^/static/(.*)$  /static/$1 break;
            }
        }

        location /dl/appliance/ {
            root "/opt/LuoYun/data/appliance/";
            rewrite ^/dl/appliance/(.*)$ /$1 break;
        }

        location / {
            proxy_read_timeout 1800;
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://frontends;
        }

    }

    include /etc/nginx/conf.d/*.conf;
}
